class BankAccount:
    def __init__(self, account_number, account_holder_name, balance=0):
        self.account_number = account_number
        self.account_holder_name = account_holder_name
        self.balance = balance
    
    def deposit(self, amount):
        if amount > 0:
            self.balance += amount
            print(f"Deposited ${amount:.2f}. New balance: ${self.balance:.2f}")
        else:
            print("Deposit amount must be positive.")
    
    def withdraw(self, amount):
        if amount > 0:
            if amount <= self.balance:
                self.balance -= amount
                print(f"Withdrew ${amount:.2f}. New balance: ${self.balance:.2f}")
            else:
                print("Insufficient funds.")
        else:
            print("Withdrawal amount must be positive.")
    
    def check_balance(self):
        print(f"Current balance: ${self.balance:.2f}")
    
    def display_account_details(self):
        print(f"Account Number: {self.account_number}")
        print(f"Account Holder: {self.account_holder_name}")
        print(f"Balance: ${self.balance:.2f}")

# Example usage
if __name__ == "__main__":
    # Create BankAccount objects
    account1 = BankAccount("123456789", "Alice Smith", 1000)
    account2 = BankAccount("987654321", "Bob Johnson", 500)
    
    # Display account details
    account1.display_account_details()
    account2.display_account_details()
    print()
    
    # Perform banking operations
    account1.deposit(200)
    account1.withdraw(150)
    account1.check_balance()
    print()
    
    account2.deposit(100)
    account2.withdraw(700)  # Should show insufficient funds
    account2.check_balance()
