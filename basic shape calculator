from abc import ABC, abstractmethod
import math

class Shape(ABC):
    @abstractmethod
    def calculate_area(self):
        pass

class Circle(Shape):
    def __init__(self, radius):
        self.radius = radius
    
    def calculate_area(self):
        return math.pi * self.radius ** 2

class Rectangle(Shape):
    def __init__(self, width, height):
        self.width = width
        self.height = height
    
    def calculate_area(self):
        return self.width * self.height

class Triangle(Shape):
    def __init__(self, base, height):
        self.base = base
        self.height = height
    
    def calculate_area(self):
        return 0.5 * self.base * self.height

# Example usage
if __name__ == "__main__":
    # Create Shape objects
    shapes = [
        Circle(radius=5),
        Rectangle(width=4, height=6),
        Triangle(base=3, height=7)
    ]
    
    # Calculate and display the area of each shape
    for shape in shapes:
        print(f"Area of {shape.__class__.__name__}: {shape.calculate_area():.2f}")
